function data = saveMouseGrabs
%% Run analysis and save mouse grab data as a list that can saved to an excel sheet
% data = saveMouseGrabs


disp('Select the .mat files to be analyzed. You can select multiple files.');
[filename, pathname] = uigetfile( ...
       {'*.mat','MAT-files (*.mat)'}, ...
        'Pick .mat file to analyze', ...
        'MultiSelect', 'on');
if iscell(filename)
    filecount = length(filename);
    matfiles = filename;
elseif ischar(filename)
    filecount = 1;
    matfiles{1} = filename;
else
    error('File not found')
end
data = {'videoFile',...
    'Frame Count',...
    'Marking',...
    'Relative Distance',...
    'Relative Angle of Approach',...
    'Relative X Distance',...
    'Relative Y Distance',...
    'Action',...
    'ActionType',...
    'Consequence',...
    'Pellet X Absolute',...
    'Pellet Y Absolute',...
    'Marking X Absolute',...
    'Marking Y Absolute'
};
modeFlag = 'background';

for i = 1:filecount
    r = [];
    theta = [];
    diffXY = [];
    outcome = {};
    traceVideoFile = {};
    refCentroid = [];
    pawCentroid = [];
    load(fullfile(pathname, matfiles{i}),'videoFile','roiData', 'grabResult','refPixelLength');
    [r,theta,diffXY,refCentroid,pawCentroid] = analyzeMouseAction(roiData, grabResult, videoFile, modeFlag, true);
    [pathName,vidName,vidExt] = fileparts(videoFile);
    % For windows
    seploc=findstr(vidName,'\');
    if ~isempty(seploc)
        vidName = vidName(seploc(end)+1:end);
    end
    if isempty(r)
        continue
    end
    % Convert from number of pixels to distance (refPixelLength = reference length/pixels)
    r           = r*refPixelLength;
    diffXY      = diffXY*refPixelLength;
    refCentroid = refCentroid*refPixelLength;
    pawCentroid = pawCentroid*refPixelLength;
    % Get the frame count of the reaches marked to match the frame count of the paw markings
    reachframes = cat(1,grabResult.frameCount);
    % Get a list of all the paws that were marked in the video
    roiMarked   = {roiData.roi}';
    pawMarked   = find(strcmpi('Paw',roiMarked));

    for j = 1:length(roiData)
        %% Reference data structure
        % data = {'videoFile',...
        %     'Frame Count',...
        %     'Marking',...
        %     'Relative Distance',...
        %     'Relative Angle of Approach',...
        %     'Relative Distance - X',...
        %     'Relative Distance - Y',...
        %     'Action',...
        %     'ActionType',...
        %     'Consequence',...
        %     'Pellet X Absolute',...
        %     'Pellet Y Absolute',...
        %     'Marking X Absolute',...
        %     'Marking Y Absolute'
        % };
        if strcmpi(roiData(j).roi,'Nose') % For nose markings
            %Hack about centroids not getting captured
            roiData(j).centroid = int16([32 32]);
            noseCentroid    = double((roiData(j).position(1:2)+roiData(j).centroid(1:2)))*refPixelLength;
            noseDiffXY      = noseCentroid-refCentroid;
            % Adjust y-axis so that pellet reference is bottom
            noseDiffXY(:,2) =-noseDiffXY(:,2);

            % Calculate distance
            noseR           = sqrt(sum(power(noseDiffXY,2),2));
            noseTheta       = atan(noseDiffXY(:,1)./noseDiffXY(:,2))*180/pi;
            data = [data;...
            {vidName,...
            roiData(j).frameCount,...
            'Nose',...
            noseR,...
            noseTheta,...
            noseDiffXY(1,1),...
            noseDiffXY(1,2),...
            '',...
            '',...
            '',...
            refCentroid(1,1),...
            refCentroid(1,2),...
            noseCentroid(1,1),...
            noseCentroid(1,2)}];
        elseif  strcmpi(roiData(j).roi,'Paw') % For paw markings
            actionSpec  = struct2cell(grabResult(reachframes==roiData(j).frameCount));
            pawindex    = find(pawMarked==j);
            
            if isempty(actionSpec)
                data = [data;...
                {vidName,...
                roiData(j).frameCount,...
                'Paw',...
                r(pawindex),...
                theta(pawindex),...
                diffXY(pawindex,1),...
                diffXY(pawindex,2),...
                '',...
                '',...
                '',...
                refCentroid(1,1),...
                refCentroid(1,2),...
                pawCentroid(pawindex,1),...
                pawCentroid(pawindex,2)}];
            else
                for k = 1:size(actionSpec,2)
                    data = [data;...
                    {vidName,...
                    roiData(j).frameCount,...
                    'Paw',...
                    r(pawindex),...
                    theta(pawindex),...
                    diffXY(pawindex,1),...
                    diffXY(pawindex,2),...
                    actionSpec{1,k},...
                    actionSpec{2,k},...
                    actionSpec{3,k},...
                    refCentroid(1,1),...
                    refCentroid(1,2),...
                    pawCentroid(pawindex,1),...
                    pawCentroid(pawindex,2)}];
                end
            end
        end
    end
end